import { ref as V, computed as C, watch as I, nextTick as Z, onBeforeUnmount as pe, reactive as fe, onMounted as Ae, defineComponent as re, inject as ne, toRef as Je, unref as v, withDirectives as ae, openBlock as L, createElementBlock as Y, normalizeClass as Ce, normalizeStyle as ge, withKeys as Qe, withModifiers as Ve, createBlock as G, Transition as ke, mergeProps as U, toHandlers as Ee, withCtx as te, vShow as ue, createCommentVNode as $, createVNode as Fe, renderSlot as ve, createElementVNode as q, Teleport as _e, normalizeProps as Re, guardReactiveProps as eo, getCurrentInstance as oo, shallowReactive as J, markRaw as _, useAttrs as no, Fragment as to, renderList as Be, resolveDynamicComponent as de, createSlots as lo } from "vue";
import { useEventListener as x, tryOnUnmounted as so } from "@vueuse/core";
import { useFocusTrap as ro } from "@vueuse/integrations/useFocusTrap";
const io = (e) => (...o) => {
  e && (e == null || e(...o), e = null);
}, D = () => {
};
function Q(e, o, t) {
  return e > t ? t : e < o ? o : e;
}
const me = (e) => typeof e == "string", ye = {
  /**
   * @description An uniq name for the open/close a modal via vfm.open/vfm.close APIs.
   * @default `undefined`
   * @example Symbol: `Symbol('MyModal')`
   * @example String: `'AUniqString'`
   * @example Number: `300`
   */
  modalId: {
    type: [String, Number, Symbol],
    default: void 0
  },
  /**
   * @description Display the modal or not.
   * @default `undefined`
   * @example
   * ```js
   * const showModal = ref(false)
   * v-model="showModal"
   * ```
   */
  modelValue: {
    type: Boolean,
    default: void 0
  },
  /**
   * @description Render the modal via `if` or `show`.
   * @default `'if'`
   * @example
   * ```js
   * displayDirective: 'if'
   * ```
   * @example
   * ```js
   * displayDirective: 'show'
   * ```
   */
  displayDirective: {
    type: String,
    default: "if",
    validator: (e) => ["if", "show", "visible"].includes(e)
  },
  /**
   * @description Hide the overlay or not.
   * @default `undefined`
   * @example
   * ```js
   * hideOverlay="true"
   * ```
   */
  hideOverlay: {
    type: Boolean,
    default: void 0
  },
  /**
   * @description Customize the overlay transition.
   * @default `undefined`
   */
  overlayTransition: {
    type: [String, Object],
    default: void 0
  },
  /**
   * @description Customize the content transition.
   * @default `undefined`
   */
  contentTransition: {
    type: [String, Object],
    default: void 0
  },
  /**
   * @description Bind class to vfm__overlay.
   * @default `undefined`
   */
  overlayClass: {
    type: void 0,
    default: void 0
  },
  /**
   * @description Bind class to vfm__content.
   * @default `undefined`
   */
  contentClass: {
    type: void 0,
    default: void 0
  },
  /**
   * @description Bind style to vfm__overlay.
   * @default `undefined`
   */
  overlayStyle: {
    type: [String, Object, Array],
    default: void 0
  },
  /**
   * @description Bind style to vfm__content.
   * @default `undefined`
   */
  contentStyle: {
    type: [String, Object, Array],
    default: void 0
  },
  /**
   * @description Is it allow to close the modal by clicking the overlay.
   * @default `true`
   */
  clickToClose: {
    type: Boolean,
    default: !0
  },
  /**
   * @description Is it allow to close the modal by keypress `esc`.
   * @default `true`
   */
  escToClose: {
    type: Boolean,
    default: !0
  },
  /**
   * @description Is it allow to click outside of the vfm__content when the modal is opened
   * @default `'non-interactive'`
   */
  background: {
    type: String,
    default: "non-interactive",
    validator: (e) => ["interactive", "non-interactive"].includes(e)
  },
  /**
   * @description
   * * Use `{ disabled: true }` to disable the focusTrap.
   * * Checkout the createOptions type here https://github.com/focus-trap/focus-trap for more.
   * @default `{ allowOutsideClick: true }`
   */
  focusTrap: {
    type: [Boolean, Object],
    default: () => ({
      allowOutsideClick: !0
    })
  },
  /**
   * @description Lock body scroll or not when the modal is opened.
   * @default `true`
   */
  lockScroll: {
    type: Boolean,
    default: !0
  },
  /**
   * @description Creates a padding-right when scroll is locked to prevent the page from jumping
   * @default `true`
   */
  reserveScrollBarGap: {
    type: Boolean,
    default: !0
  },
  /**
   * @description Define how to increase the zIndex when there are nested modals
   * @default `({ index }) => 1000 + 2 * index`
   */
  zIndexFn: {
    type: Function,
    default: ({ index: e }) => 1e3 + 2 * e
  },
  /**
   * @description The direction of swiping to close the modal
   * @default `none`
   * @example
   * Set swipeToClose="none" to disable swiping to close
   * ```js
   * swipeToClose="none"
   * ```
   */
  swipeToClose: {
    type: String,
    default: "none",
    validator: (e) => ["none", "up", "right", "down", "left"].includes(e)
  },
  /**
   * @description Threshold for swipe to close
   * @default `0`
   */
  threshold: {
    type: Number,
    default: 0
  },
  /**
   * @description If set `:showSwipeBanner="true"`, only allow clicking `swipe-banner` slot to swipe to close
   * @default `undefined`
   * @example
   * ```js
   * swipeToClose="right"
   * :showSwipeBanner="true"
   * ```
   * ```html
   * <VueFinalModal
   *   ...
   *   swipeToClose="right"
   *   :showSwipeBanner="true"
   * >
   *   <template #swipe-banner>
   *     <div style="position: absolute; height: 100%; top: 0; left: 0; width: 10px;" />
   *   </template>
   *   ...modal content
   * </VueFinalModal>
   * ```
   */
  showSwipeBanner: {
    type: Boolean,
    default: void 0
  },
  /**
   * @description When set `:preventNavigationGestures="true"`, there will be two invisible bars for prevent navigation gestures including swiping back/forward on mobile webkit. For example: Safari mobile.
   * @default `undefined`
   * @example
   * Set preventNavigationGestures="true" to prevent Safari navigation gestures including swiping back/forward.
   * ```js
   * :preventNavigationGestures="true"
   * ```
   */
  preventNavigationGestures: {
    type: Boolean,
    default: void 0
  }
};
function Le(e = !1) {
  const o = V(e), t = V(o.value ? 0 : void 0);
  return [o, t, {
    beforeEnter() {
      t.value = 1;
    },
    afterEnter() {
      t.value = 0;
    },
    beforeLeave() {
      t.value = 3;
    },
    afterLeave() {
      t.value = 2;
    }
  }];
}
function ao(e, o) {
  const { modelValueLocal: t, onEntering: s, onEnter: d, onLeaving: a, onLeave: r } = o, n = V(t.value), [l, u, h] = Le(n.value), [p, S, b] = Le(n.value), g = C(() => typeof e.contentTransition == "string" ? { name: e.contentTransition } : { ...e.contentTransition }), k = C(() => typeof e.overlayTransition == "string" ? { name: e.overlayTransition } : { ...e.overlayTransition }), E = C(
    () => (e.hideOverlay || S.value === 2) && u.value === 2
    /* Leave */
  );
  I(
    E,
    (T) => {
      T && (n.value = !1);
    }
  ), I(u, (T) => {
    if (T === 1) {
      if (!n.value)
        return;
      s == null || s();
    } else if (T === 0) {
      if (!n.value)
        return;
      d == null || d();
    } else
      T === 3 ? a == null || a() : T === 2 && (r == null || r());
  });
  async function M() {
    n.value = !0, await Z(), l.value = !0, p.value = !0;
  }
  function P() {
    l.value = !1, p.value = !1;
  }
  return {
    visible: n,
    contentVisible: l,
    contentListeners: h,
    contentTransition: g,
    overlayVisible: p,
    overlayListeners: b,
    overlayTransition: k,
    enterTransition: M,
    leaveTransition: P
  };
}
function uo(e, o, t) {
  const { vfmRootEl: s, vfmContentEl: d, visible: a, modelValueLocal: r } = t, n = V();
  function l() {
    a.value && e.escToClose && (r.value = !1);
  }
  function u(p) {
    n.value = p == null ? void 0 : p.target;
  }
  function h() {
    var p;
    n.value === s.value && (e.clickToClose ? r.value = !1 : ((p = d.value) == null || p.focus(), o("clickOutside")));
  }
  return {
    onEsc: l,
    onMouseupRoot: h,
    onMousedown: u
  };
}
function co(e, o) {
  const t = V(!!e.modelValue);
  return I(() => e.modelValue, (s) => {
    t.value = !!s;
  }), I(t, (s) => {
    s !== e.modelValue && o("update:modelValue", s);
  }), {
    modelValueLocal: t
  };
}
function fo(e, o) {
  if (e.focusTrap === !1)
    return {
      focus() {
      },
      blur() {
      }
    };
  const { focusEl: t } = o, { hasFocus: s, activate: d, deactivate: a } = ro(t, e.focusTrap);
  function r() {
    requestAnimationFrame(() => {
      d();
    });
  }
  function n() {
    s.value && a();
  }
  return { focus: r, blur: n };
}
let he = !1;
if (typeof window < "u") {
  const e = {
    get passive() {
      he = !0;
    }
  };
  window.addEventListener("testPassive", null, e), window.removeEventListener("testPassive", null, e);
}
const xe = typeof window < "u" && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === "MacIntel" && window.navigator.maxTouchPoints > 1);
let N = [], le = !1, ee = 0, He = -1, W, X;
const vo = (e) => {
  if (!e || e.nodeType !== Node.ELEMENT_NODE)
    return !1;
  const o = window.getComputedStyle(e);
  return ["auto", "scroll"].includes(o.overflowY) && e.scrollHeight > e.clientHeight;
}, po = (e, o) => !(e.scrollTop === 0 && o < 0 || e.scrollTop + e.clientHeight + o >= e.scrollHeight && o > 0), mo = (e) => {
  const o = [];
  for (; e; ) {
    if (o.push(e), e.classList.contains("vfm"))
      return o;
    e = e.parentElement;
  }
  return o;
}, yo = (e, o) => {
  let t = !1;
  return mo(e).forEach((d) => {
    vo(d) && po(d, o) && (t = !0);
  }), t;
}, Ne = (e) => N.some(() => yo(e, -ee)), se = (e) => {
  const o = e || window.event;
  return Ne(o.target) || o.touches.length > 1 ? !0 : (o.preventDefault && o.preventDefault(), !1);
}, ho = (e) => {
  if (X === void 0) {
    const o = !!e && e.reserveScrollBarGap === !0, t = window.innerWidth - document.documentElement.clientWidth;
    if (o && t > 0) {
      const s = parseInt(getComputedStyle(document.body).getPropertyValue("padding-right"), 10);
      X = document.body.style.paddingRight, document.body.style.paddingRight = `${s + t}px`;
    }
  }
  W === void 0 && (W = document.body.style.overflow, document.body.style.overflow = "hidden");
}, wo = () => {
  X !== void 0 && (document.body.style.paddingRight = X, X = void 0), W !== void 0 && (document.body.style.overflow = W, W = void 0);
}, bo = (e) => e ? e.scrollHeight - e.scrollTop <= e.clientHeight : !1, To = (e, o) => (ee = e.targetTouches[0].clientY - He, Ne(e.target) ? !1 : o && o.scrollTop === 0 && ee > 0 || bo(o) && ee < 0 ? se(e) : (e.stopPropagation(), !0)), Mo = (e, o) => {
  if (!e) {
    console.error(
      "disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices."
    );
    return;
  }
  if (N.some((s) => s.targetElement === e))
    return;
  const t = {
    targetElement: e,
    options: o || {}
  };
  N = [...N, t], xe ? (e.ontouchstart = (s) => {
    s.targetTouches.length === 1 && (He = s.targetTouches[0].clientY);
  }, e.ontouchmove = (s) => {
    s.targetTouches.length === 1 && To(s, e);
  }, le || (document.addEventListener("touchmove", se, he ? { passive: !1 } : void 0), le = !0)) : ho(o);
}, So = (e) => {
  if (!e) {
    console.error(
      "enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices."
    );
    return;
  }
  N = N.filter((o) => o.targetElement !== e), xe ? (e.ontouchstart = null, e.ontouchmove = null, le && N.length === 0 && (document.removeEventListener("touchmove", se, he ? { passive: !1 } : void 0), le = !1)) : N.length || wo();
};
function Oo(e, o) {
  const { lockScrollEl: t, modelValueLocal: s } = o;
  let d;
  I(t, (n) => {
    n && (d = n);
  }, { immediate: !0 }), I(() => e.lockScroll, (n) => {
    n ? r() : a();
  }), pe(() => {
    a();
  });
  function a() {
    d && So(d);
  }
  function r() {
    s.value && e.lockScroll && d && Mo(d, {
      reserveScrollBarGap: e.reserveScrollBarGap,
      allowTouchMove: (n) => {
        for (; n && n !== document.body; ) {
          if (n.getAttribute("vfm-scroll-lock-ignore") !== null)
            return !0;
          n = n.parentElement;
        }
        return !1;
      }
    });
  }
  return {
    enableBodyScroll: a,
    disableBodyScroll: r
  };
}
function Co(e) {
  function o(t) {
    switch (t) {
      case "beforeOpen":
        e(t);
        break;
      case "beforeClose":
        e(t);
        break;
      case "opened":
        e(t);
        break;
      case "closed":
        e(t);
        break;
    }
  }
  return {
    emitEvent: o
  };
}
function go(e) {
  const o = V();
  function t(d) {
    var a;
    o.value = (a = e.zIndexFn) == null ? void 0 : a.call(e, { index: d <= -1 ? 0 : d });
  }
  function s() {
    o.value = void 0;
  }
  return {
    zIndex: o,
    refreshZIndex: t,
    resetZIndex: s
  };
}
const ce = {
  beforeMount(e, { value: o }, { transition: t }) {
    e._vov = e.style.visibility === "hidden" ? "" : e.style.visibility, t && o ? t.beforeEnter(e) : z(e, o);
  },
  mounted(e, { value: o }, { transition: t }) {
    t && o && t.enter(e);
  },
  updated(e, { value: o, oldValue: t }, { transition: s }) {
    !o != !t && (s ? o ? (s.beforeEnter(e), z(e, !0), s.enter(e)) : s.leave(e, () => {
      z(e, !1);
    }) : z(e, o));
  },
  beforeUnmount(e, { value: o }) {
    z(e, o);
  }
};
function z(e, o) {
  e.style.visibility = o ? e._vov : "hidden";
}
const Ie = (e) => {
  if (e instanceof MouseEvent) {
    const { clientX: o, clientY: t } = e;
    return { x: o, y: t };
  } else {
    const { clientX: o, clientY: t } = e.targetTouches[0];
    return { x: o, y: t };
  }
};
function Vo(e) {
  if (!e)
    return !1;
  let o = !1;
  const t = {
    get passive() {
      return o = !0, !1;
    }
  };
  return e.addEventListener("x", D, t), e.removeEventListener("x", D), o;
}
function ko(e, {
  threshold: o = 0,
  onSwipeStart: t,
  onSwipe: s,
  onSwipeEnd: d,
  passive: a = !0
}) {
  const r = fe({ x: 0, y: 0 }), n = fe({ x: 0, y: 0 }), l = C(() => r.x - n.x), u = C(() => r.y - n.y), { max: h, abs: p } = Math, S = C(
    () => h(p(l.value), p(u.value)) >= o
  ), b = V(!1), g = C(() => S.value ? p(l.value) > p(u.value) ? l.value > 0 ? "left" : "right" : u.value > 0 ? "up" : "down" : "none"), k = (c, y) => {
    r.x = c, r.y = y;
  }, E = (c, y) => {
    n.x = c, n.y = y;
  };
  let M, P;
  function T(c) {
    M.capture && !M.passive && c.preventDefault();
    const { x: y, y: R } = Ie(c);
    k(y, R), E(y, R), t == null || t(c), P = [
      x(e, "mousemove", F, M),
      x(e, "touchmove", F, M),
      x(e, "mouseup", i, M),
      x(e, "touchend", i, M),
      x(e, "touchcancel", i, M)
    ];
  }
  function F(c) {
    const { x: y, y: R } = Ie(c);
    E(y, R), !b.value && S.value && (b.value = !0), b.value && (s == null || s(c));
  }
  function i(c) {
    b.value && (d == null || d(c, g.value)), b.value = !1, P.forEach((y) => y());
  }
  let m = [];
  return Ae(() => {
    const c = Vo(window == null ? void 0 : window.document);
    a ? M = c ? { passive: !0 } : { capture: !1 } : M = c ? { passive: !1, capture: !0 } : { capture: !0 }, m = [
      x(e, "mousedown", T, M),
      x(e, "touchstart", T, M)
    ];
  }), {
    isSwiping: b,
    direction: g,
    coordsStart: r,
    coordsEnd: n,
    lengthX: l,
    lengthY: u,
    stop: () => {
      m.forEach((c) => c()), P.forEach((c) => c());
    }
  };
}
function Eo(e, o) {
  const { vfmContentEl: t, modelValueLocal: s } = o, d = 0.1, a = 300, r = V(), n = C(() => {
    if (!(e.swipeToClose === void 0 || e.swipeToClose === "none"))
      return e.showSwipeBanner ? r.value : t.value;
  }), l = V(0), u = V(!0);
  let h = D, p = !0, S, b = !1;
  const { lengthX: g, lengthY: k, direction: E, isSwiping: M } = ko(n, {
    threshold: e.threshold,
    onSwipeStart(i) {
      h = x(document, "selectionchange", () => {
        var m;
        u.value = (m = window.getSelection()) == null ? void 0 : m.isCollapsed;
      }), S = (/* @__PURE__ */ new Date()).getTime(), b = F(i == null ? void 0 : i.target);
    },
    onSwipe() {
      var i, m, B, c;
      if (b && u.value && E.value === e.swipeToClose) {
        if (E.value === "up") {
          const y = Q(Math.abs(k.value || 0), 0, ((i = n.value) == null ? void 0 : i.offsetHeight) || 0) - (e.threshold || 0);
          l.value = y;
        } else if (E.value === "down") {
          const y = Q(Math.abs(k.value || 0), 0, ((m = n.value) == null ? void 0 : m.offsetHeight) || 0) - (e.threshold || 0);
          l.value = -y;
        } else if (E.value === "right") {
          const y = Q(Math.abs(g.value || 0), 0, ((B = n.value) == null ? void 0 : B.offsetWidth) || 0) - (e.threshold || 0);
          l.value = -y;
        } else if (E.value === "left") {
          const y = Q(Math.abs(g.value || 0), 0, ((c = n.value) == null ? void 0 : c.offsetWidth) || 0) - (e.threshold || 0);
          l.value = y;
        }
      }
    },
    onSwipeEnd(i, m) {
      if (h(), !u.value) {
        u.value = !0;
        return;
      }
      const B = (/* @__PURE__ */ new Date()).getTime(), c = m === e.swipeToClose, y = (() => {
        var K, j;
        if (m === "up" || m === "down")
          return Math.abs((k == null ? void 0 : k.value) || 0) > d * (((K = n.value) == null ? void 0 : K.offsetHeight) || 0);
        if (m === "left" || m === "right")
          return Math.abs((g == null ? void 0 : g.value) || 0) > d * (((j = n.value) == null ? void 0 : j.offsetWidth) || 0);
      })(), R = B - S <= a;
      if (p && b && c && (y || R)) {
        s.value = !1;
        return;
      }
      l.value = 0;
    }
  }), P = C(() => {
    if (e.swipeToClose === "none")
      return;
    const i = (() => {
      switch (e.swipeToClose) {
        case "up":
        case "down":
          return "translateY";
        case "left":
        case "right":
          return "translateX";
      }
    })();
    return {
      class: { "vfm-bounce-back": !M.value },
      style: { transform: `${i}(${-l.value}px)` }
    };
  });
  I(
    () => u.value,
    (i) => {
      i || (l.value = 0);
    }
  ), I(
    () => s.value,
    (i) => {
      i && (l.value = 0);
    }
  ), I(
    () => l.value,
    (i, m) => {
      switch (e.swipeToClose) {
        case "down":
        case "right":
          p = i < m;
          break;
        case "up":
        case "left":
          p = i > m;
          break;
      }
    }
  );
  function T(i) {
    e.preventNavigationGestures && i.preventDefault();
  }
  function F(i) {
    const m = i == null ? void 0 : i.tagName;
    if (!m || ["INPUT", "TEXTAREA"].includes(m))
      return !1;
    const B = (() => {
      switch (e.swipeToClose) {
        case "up":
          return (i == null ? void 0 : i.scrollTop) + (i == null ? void 0 : i.clientHeight) === (i == null ? void 0 : i.scrollHeight);
        case "left":
          return (i == null ? void 0 : i.scrollLeft) + (i == null ? void 0 : i.clientWidth) === (i == null ? void 0 : i.scrollWidth);
        case "down":
          return (i == null ? void 0 : i.scrollTop) === 0;
        case "right":
          return (i == null ? void 0 : i.scrollLeft) === 0;
        default:
          return !1;
      }
    })();
    return i === n.value ? B : B && F(i == null ? void 0 : i.parentElement);
  }
  return {
    vfmContentEl: t,
    swipeBannerEl: r,
    bindSwipe: P,
    onTouchStartSwipeBanner: T
  };
}
const we = Symbol("vfm"), be = Symbol("internalVfm"), Bo = /* @__PURE__ */ re({
  __name: "CoreModal",
  props: ye,
  emits: ["update:modelValue", "beforeOpen", "opened", "beforeClose", "closed", "clickOutside"],
  setup(e, { emit: o }) {
    const t = e, s = o, { modals: d, openedModals: a } = ne(we, {
      modals: [],
      openedModals: []
    }), {
      openLastOverlay: r,
      moveToLastOpenedModals: n,
      deleteFromOpenedModals: l,
      moveToLastOpenedModalOverlays: u,
      deleteFromOpenedModalOverlays: h,
      deleteFromModals: p
    } = ne(be, {
      openLastOverlay: D,
      moveToLastOpenedModals: D,
      deleteFromOpenedModals: D,
      moveToLastOpenedModalOverlays: D,
      deleteFromOpenedModalOverlays: D,
      deleteFromModals: D
    }), S = V(), b = V(), { focus: g, blur: k } = fo(t, { focusEl: S }), { zIndex: E, refreshZIndex: M, resetZIndex: P } = go(t), { modelValueLocal: T } = co(t, s), { enableBodyScroll: F, disableBodyScroll: i } = Oo(t, {
      lockScrollEl: S,
      modelValueLocal: T
    }), { emitEvent: m } = Co(s);
    let B = D;
    const {
      visible: c,
      contentVisible: y,
      contentListeners: R,
      contentTransition: K,
      overlayVisible: j,
      overlayListeners: je,
      overlayTransition: Ye,
      enterTransition: $e,
      leaveTransition: ze
    } = ao(t, {
      modelValueLocal: T,
      onEntering() {
        Z(() => {
          i(), g();
        });
      },
      onEnter() {
        m("opened"), B("opened");
      },
      onLeave() {
        l(Ze()), P(), F(), m("closed"), B("closed");
      }
    }), { onEsc: Ge, onMouseupRoot: Ue, onMousedown: Te } = uo(t, s, { vfmRootEl: S, vfmContentEl: b, visible: c, modelValueLocal: T }), {
      swipeBannerEl: We,
      bindSwipe: Xe,
      onTouchStartSwipeBanner: Me
    } = Eo(t, { vfmContentEl: b, modelValueLocal: T }), Se = Je(t, "hideOverlay"), A = C(() => ({
      modalId: t.modalId,
      hideOverlay: Se,
      overlayVisible: j,
      focus: g,
      toggle(f) {
        return new Promise((w) => {
          B = io((qe) => w(qe));
          const O = typeof f == "boolean" ? f : !T.value;
          T.value = O, s("update:modelValue", O);
        });
      }
    }));
    function Ze() {
      return A;
    }
    const ie = C(() => a.indexOf(A));
    I(() => [t.zIndexFn, ie.value], () => {
      c.value && M(ie.value);
    }), Ae(() => {
      d.push(A);
    }), T.value && Oe(), I(T, (f) => {
      f ? Oe() : Ke();
    });
    async function Oe() {
      m("beforeOpen"), n(A), u(A), M(ie.value), r(), $e();
    }
    function Ke() {
      m("beforeClose"), h(A), r(), k(), ze();
    }
    return pe(() => {
      F(), p(A), l(A), h(A), k(), r();
    }), (f, w) => f.displayDirective !== "if" || v(c) ? ae((L(), Y("div", {
      key: 0,
      ref_key: "vfmRootEl",
      ref: S,
      class: Ce(["vfm vfm--fixed vfm--inset", { "vfm--prevent-none": f.background === "interactive" }]),
      style: ge({ zIndex: v(E) }),
      role: "dialog",
      "aria-modal": "true",
      onKeydown: w[7] || (w[7] = Qe(() => v(Ge)(), ["esc"])),
      onMouseup: w[8] || (w[8] = Ve(() => v(Ue)(), ["self"])),
      onMousedown: w[9] || (w[9] = Ve((O) => v(Te)(O), ["self"]))
    }, [
      Se.value ? $("", !0) : (L(), G(ke, U({ key: 0 }, v(Ye), { appear: !0 }, Ee(v(je))), {
        default: te(() => [
          f.displayDirective !== "if" || v(j) ? ae((L(), Y("div", {
            key: 0,
            class: Ce(["vfm__overlay vfm--overlay vfm--absolute vfm--inset vfm--prevent-none", f.overlayClass]),
            style: ge(f.overlayStyle),
            "aria-hidden": "true"
          }, null, 6)), [
            [ue, f.displayDirective !== "show" || v(j)],
            [v(ce), f.displayDirective !== "visible" || v(j)]
          ]) : $("", !0)
        ]),
        _: 1
      }, 16)),
      Fe(ke, U(v(K), { appear: !0 }, Ee(v(R))), {
        default: te(() => [
          f.displayDirective !== "if" || v(y) ? ae((L(), Y("div", U({
            key: 0,
            ref_key: "vfmContentEl",
            ref: b,
            class: ["vfm__content vfm--outline-none", [f.contentClass, { "vfm--prevent-auto": f.background === "interactive" }]],
            style: f.contentStyle,
            tabindex: "0"
          }, v(Xe), {
            onMousedown: w[6] || (w[6] = () => v(Te)())
          }), [
            ve(f.$slots, "default"),
            f.showSwipeBanner ? (L(), Y("div", {
              key: 0,
              ref_key: "swipeBannerEl",
              ref: We,
              class: "vfm-swipe-banner-container",
              onTouchstart: w[2] || (w[2] = (O) => v(Me)(O))
            }, [
              ve(f.$slots, "swipe-banner", {}, () => [
                q("div", {
                  class: "vfm-swipe-banner-back",
                  onTouchstart: w[0] || (w[0] = (O) => f.swipeToClose === "left" && O.preventDefault())
                }, null, 32),
                q("div", {
                  class: "vfm-swipe-banner-forward",
                  onTouchstart: w[1] || (w[1] = (O) => f.swipeToClose === "right" && O.preventDefault())
                }, null, 32)
              ])
            ], 544)) : !f.showSwipeBanner && f.preventNavigationGestures ? (L(), Y("div", {
              key: 1,
              class: "vfm-swipe-banner-container",
              onTouchstart: w[5] || (w[5] = (O) => v(Me)(O))
            }, [
              q("div", {
                class: "vfm-swipe-banner-back",
                onTouchstart: w[3] || (w[3] = (O) => f.swipeToClose === "left" && O.preventDefault())
              }, null, 32),
              q("div", {
                class: "vfm-swipe-banner-forward",
                onTouchstart: w[4] || (w[4] = (O) => f.swipeToClose === "right" && O.preventDefault())
              }, null, 32)
            ], 32)) : $("", !0)
          ], 16)), [
            [ue, f.displayDirective !== "show" || v(y)],
            [v(ce), f.displayDirective !== "visible" || v(y)]
          ]) : $("", !0)
        ]),
        _: 3
      }, 16)
    ], 38)), [
      [ue, f.displayDirective !== "show" || v(c)],
      [v(ce), f.displayDirective !== "visible" || v(c)]
    ]) : $("", !0);
  }
});
const Lo = {
  ...ye,
  /**
   * @description Set `null | false` to disable teleport.
   * @default `'body'`
   * @example
   * ```js
   * teleportTo: '#modals'
   * ```
   */
  teleportTo: {
    type: [String, null, Boolean, Object],
    default: "body"
  }
}, Io = re({
  inheritAttrs: !1
}), Do = /* @__PURE__ */ re({
  ...Io,
  __name: "VueFinalModal",
  props: Lo,
  emits: ["update:modelValue", "beforeOpen", "opened", "beforeClose", "closed", "clickOutside"],
  setup(e, { emit: o }) {
    const d = No({
      props: e,
      modalProps: ye,
      emit: o
    });
    return (a, r) => (L(), G(_e, {
      to: a.teleportTo ? a.teleportTo : void 0,
      disabled: !a.teleportTo
    }, [
      Fe(Bo, Re(eo(v(d))), {
        default: te(() => [
          ve(a.$slots, "default")
        ]),
        _: 3
      }, 16)
    ], 8, ["to", "disabled"]));
  }
});
let H;
const Po = (e) => H = e, Ao = () => oo() && ne(we) || H;
function Go() {
  const e = J([]), o = J([]), t = J([]), s = J([]), d = V([]), a = _({
    install(r) {
      r.provide(we, a), r.config.globalProperties.$vfm = a;
      const n = Fo(a);
      r.provide(be, n);
    },
    modals: e,
    openedModals: o,
    openedModalOverlays: t,
    dynamicModals: s,
    modalsContainers: d,
    get(r) {
      return e.find((n) => n.value.modalId && r === n.value.modalId);
    },
    toggle(r, n) {
      const l = a.get(r);
      return l == null ? void 0 : l.value.toggle(n);
    },
    open(r) {
      return a.toggle(r, !0);
    },
    close(r) {
      return a.toggle(r, !1);
    },
    closeAll() {
      return Promise.allSettled([o.map((r) => r.value.toggle(!1))]);
    }
  });
  return Po(a), a;
}
function Fo(e) {
  const { modals: o, openedModals: t, openedModalOverlays: s, dynamicModals: d } = e, a = {
    deleteFromModals(r) {
      const n = o.findIndex((l) => l.value === r.value);
      n !== -1 && o.splice(n, 1);
    },
    moveToLastOpenedModals(r) {
      a.deleteFromOpenedModals(r), t.push(r);
    },
    deleteFromOpenedModals(r) {
      const n = t.findIndex((l) => l.value === r.value);
      n !== -1 && t.splice(n, 1);
    },
    moveToLastOpenedModalOverlays(r) {
      a.deleteFromOpenedModalOverlays(r), s.push(r);
    },
    deleteFromOpenedModalOverlays(r) {
      const n = s.findIndex((l) => l.value === r.value);
      n !== -1 && s.splice(n, 1);
    },
    async openLastOverlay() {
      var r;
      if (await Z(), s.forEach((n) => n.value.overlayVisible.value = !1), s.length > 0) {
        const n = s[s.length - 1];
        !((r = n.value.hideOverlay) != null && r.value) && (n.value.overlayVisible.value = !0);
      }
    },
    resolvedClosed(r) {
      var n, l, u;
      (l = (n = d[r]) == null ? void 0 : n.resolveClosed) == null || l.call(n), (u = d[r]) != null && u.keepAlive || d.splice(r, 1);
    },
    resolvedOpened(r) {
      var n, l;
      (l = (n = d[r]) == null ? void 0 : n.resolveOpened) == null || l.call(n);
    }
  };
  return a;
}
function oe() {
  const e = Ao();
  if (!e)
    throw new Error(
      `[Vue Final Modal]: getActiveVfm was called with no active Vfm. Did you forget to install vfm?
	const vfm = createVfm()
	app.use(vfm)
This will fail in production.`
    );
  return e;
}
function Ro() {
  return ne(be);
}
function De(e, o = Do) {
  const { component: t, slots: s, ...d } = e, a = typeof s > "u" ? {} : Object.fromEntries(Object.entries(s).map(([r, n]) => me(n) ? [r, n] : "component" in n ? [r, {
    ...n,
    component: _(n.component)
  }] : [r, _(n)]));
  return {
    ...d,
    component: _(t || o),
    slots: a
  };
}
function Uo(e) {
  const o = fe({
    id: Symbol("useModal"),
    modelValue: !!(e != null && e.defaultModelValue),
    resolveOpened: () => {
    },
    resolveClosed: () => {
    },
    attrs: {},
    ...De(e)
  });
  so(() => {
    o != null && o.keepAlive || n();
  }), o.modelValue === !0 && (H ? H == null || H.dynamicModals.push(o) : Z(() => {
    const l = oe();
    l == null || l.dynamicModals.push(o);
  }));
  async function t() {
    let l;
    return H ? l = H : (await Z(), l = oe()), o.modelValue ? Promise.resolve("[Vue Final Modal] modal is already opened.") : (n(), o.modelValue = !0, l.dynamicModals.push(o), new Promise((u) => {
      o.resolveOpened = () => u("opened");
    }));
  }
  function s() {
    return o.modelValue ? (o.modelValue = !1, new Promise((l) => {
      o.resolveClosed = () => l("closed");
    })) : Promise.resolve("[Vue Final Modal] modal is already closed.");
  }
  function d(l) {
    const { slots: u, ...h } = De(l, o.component);
    l.defaultModelValue !== void 0 && (o.defaultModelValue = l.defaultModelValue), (l == null ? void 0 : l.keepAlive) !== void 0 && (o.keepAlive = l == null ? void 0 : l.keepAlive), a(o, h), u && Object.entries(u).forEach(([p, S]) => {
      const b = o.slots[p];
      me(b) ? o.slots[p] = S : Pe(b) && Pe(S) ? a(b, S) : o.slots[p] = S;
    });
  }
  function a(l, u) {
    u.component && (l.component = u.component), u.attrs && r(l.attrs, u.attrs);
  }
  function r(l, u) {
    return Object.entries(u).forEach(([h, p]) => {
      l[h] = p;
    }), l;
  }
  function n() {
    const l = oe(), u = l.dynamicModals.indexOf(o);
    u !== -1 && l.dynamicModals.splice(u, 1);
  }
  return {
    options: o,
    open: t,
    close: s,
    patchOptions: d,
    destroy: n
  };
}
function Wo(e) {
  return e;
}
function Pe(e) {
  return "component" in e || "attrs" in e;
}
function xo(e, o) {
  return Object.keys(o).reduce((t, s) => (t[s] = e[s], t), {});
}
function Ho(e) {
  return e ? {
    "onUpdate:modelValue": (o) => e("update:modelValue", o),
    onBeforeClose: () => e("beforeClose"),
    onClosed: () => e("closed"),
    onBeforeOpen: () => e("beforeOpen"),
    onOpened: () => e("opened"),
    /** onClickOutside will only be emitted when clickToClose equal to `false` */
    onClickOutside: () => e("clickOutside")
  } : {};
}
function No(e) {
  const { props: o, modalProps: t, emit: s } = e, d = C(() => xo(o, t)), a = Ho(s), r = no();
  return C(() => ({
    ...d.value,
    ...a,
    ...r
  }));
}
const jo = ["innerHTML"], Xo = /* @__PURE__ */ re({
  __name: "ModalsContainer",
  setup(e) {
    const o = oe(), t = Ro(), s = Symbol("ModalsContainer"), d = C(() => {
      var a;
      return s === ((a = o.modalsContainers.value) == null ? void 0 : a[0]);
    });
    return o.modalsContainers.value.push(s), pe(() => {
      o.modalsContainers.value = o.modalsContainers.value.filter((a) => a !== s);
    }), (a, r) => d.value ? (L(!0), Y(to, { key: 0 }, Be(v(o).dynamicModals, (n, l) => (L(), G(de(n.component), U({
      key: n.id
    }, {
      displayDirective: n != null && n.keepAlive ? "show" : void 0,
      ...n.attrs
    }, {
      modelValue: n.modelValue,
      "onUpdate:modelValue": (u) => n.modelValue = u,
      onClosed: () => {
        var u, h;
        return (h = (u = v(t)).resolvedClosed) == null ? void 0 : h.call(u, l);
      },
      onOpened: () => {
        var u, h;
        return (h = (u = v(t)).resolvedOpened) == null ? void 0 : h.call(u, l);
      }
    }), lo({ _: 2 }, [
      Be(n.slots, (u, h) => ({
        name: h,
        fn: te(() => [
          v(me)(u) ? (L(), Y("div", {
            key: 0,
            innerHTML: u
          }, null, 8, jo)) : "component" in u ? (L(), G(de(u.component), Re(U({ key: 1 }, u.attrs)), null, 16)) : (L(), G(de(u), { key: 2 }))
        ])
      }))
    ]), 1040, ["modelValue", "onUpdate:modelValue", "onClosed", "onOpened"]))), 128)) : $("", !0);
  }
});
export {
  Bo as CoreModal,
  Xo as ModalsContainer,
  Do as VueFinalModal,
  H as activeVfm,
  ye as coreModalProps,
  Go as createVfm,
  Ao as getActiveVfm,
  Po as setActiveVfm,
  Uo as useModal,
  Wo as useModalSlot,
  oe as useVfm,
  No as useVfmAttrs,
  Lo as vueFinalModalProps
};
